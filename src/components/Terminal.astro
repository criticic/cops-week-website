<div class="flex items-center justify-center md:w-1/2">
  <div
    class="w-full rounded-lg border-2 border-amber-100/80 bg-black/80 p-6 font-mono text-amber-100/90"
  >
    <div class="mb-4 flex items-center gap-2 text-amber-100/50">
      <span>●</span>
      <span>●</span>
      <span>●</span>
    </div>
    <div id="terminal-content">
      <p class="mb-2 hidden">last login: Wed Feb 12 09:23:14 on ttys000</p>
      <p class="mb-1 hidden">cops@server:~$ date</p>
      <p class="hidden text-amber-100">COPS Week 2025: 16th–23rd February</p>
      <p class="mb-1 hidden">cops@server:~$ ls -la events/</p>
      <p class="hidden text-green-400">
        drwxr-xr-x 2 cops cops 4096 Feb 12 09:24 machine-learning/
      </p>
      <p class="hidden text-yellow-400">
        drwxr-xr-x 2 cops cops 4096 Feb 12 09:24 development/
      </p>
      <p class="hidden text-blue-400">
        drwxr-xr-x 2 cops cops 4096 Feb 12 09:24 cybersecurity/
      </p>
      <p class="mt-4 hidden">cops@server:~$ <span class="cursor">_</span></p>
    </div>
  </div>
</div>

<style>
  .cursor {
    animation: blink 1s step-end infinite;
  }

  @keyframes blink {
    50% {
      opacity: 0;
    }
  }

  .hidden {
    display: none;
  }

  .visible {
    display: block;
  }
</style>

<script>
  const CHAR_TYPING_DELAY = 12.5;
  const LINE_TYPING_DELAY = 200;
  const ANIMATION_RESET_DELAY = 6 * 1000;

  function typeWriter() {
    const terminalContent = document.getElementById('terminal-content');
    if (!terminalContent) return;

    const lines = Array.from(terminalContent.getElementsByTagName('p'));
    let currentLineIndex = 0;
    let currentCharIndex = 0;

    function showNextLine() {
      if (currentLineIndex >= lines.length) {
        // If all lines have been shown, wait a while and then restart the animation
        setTimeout(() => {
          lines.forEach((line) => {
            line.classList.remove('visible');
            line.classList.add('hidden');
          });
          currentLineIndex = 0;
          typeWriter();
        }, ANIMATION_RESET_DELAY);

        return;
      }

      const currentLine = lines[currentLineIndex];
      const text = currentLine.textContent || '';
      currentLine.classList.remove('hidden');
      currentLine.classList.add('visible');

      if (currentLineIndex === lines.length - 1) {
        // Last line (prompt) appears immediately
        currentLineIndex++;
        setTimeout(showNextLine, LINE_TYPING_DELAY);
        return;
      }

      // Store original text and clear it
      // @ts-ignore
      currentLine.originalText = text;
      currentLine.textContent = '';

      function typeChar() {
        if (currentCharIndex < text.length) {
          currentLine.textContent += text[currentCharIndex];
          currentCharIndex++;
          setTimeout(typeChar, CHAR_TYPING_DELAY);
        } else {
          currentCharIndex = 0;
          currentLineIndex++;
          setTimeout(showNextLine, LINE_TYPING_DELAY);
        }
      }

      typeChar();
    }

    showNextLine();
  }

  // Start the animation when the page loads
  document.addEventListener('DOMContentLoaded', typeWriter);
</script>
