---
import { Icon } from 'astro-icon/components';

interface Event {
  title: string;
  startTime: string;
  endTime: string;
  type: 'ml' | 'dev' | 'cybersec' | 'cp';
  location: string;
  startDate?: string;
  endDate?: string;
}

interface DaySchedule {
  date: string;
  day: string;
  events: Event[];
}

const schedule: DaySchedule[] = [
  {
    date: '2025-02-16',
    day: 'Day 0',
    events: [
      {
        startTime: '10:00',
        endTime: '16:00',
        title: 'Mira Networks Workshop',
        type: 'ml',
        location: 'Online',
      },
      {
        startTime: '18:00',
        endTime: '18:00',
        title: 'DebugIt Hackathon',
        type: 'dev',
        location: 'Online',
        startDate: '2025-02-16',
        endDate: '2025-02-23',
      },
      {
        startTime: '18:00',
        endTime: '18:00',
        title: 'Ctrl+Shift+Intelligence Hackathon',
        type: 'ml',
        location: 'Online',
        startDate: '2025-02-16',
        endDate: '2025-02-23',
      },
    ],
  },
  {
    date: '2025-02-18',
    day: 'Day 2',
    events: [
      {
        startTime: '18:00',
        endTime: '18:00',
        title: 'DebugIt BugHunt (Daily Mini Event)',
        type: 'dev',
        location: 'Online',
        startDate: '2025-02-18',
        endDate: '2025-02-23',
      },
    ],
  },
  {
    date: '2025-02-20',
    day: 'Day 4',
    events: [
      {
        startTime: '18:00',
        endTime: '06:00',
        title: 'NP Compete',
        type: 'cp',
        location: 'Online',
        startDate: '2025-02-20',
        endDate: '2025-02-22',
      },
    ],
  },
  {
    date: '2025-02-21',
    day: 'Day 5',
    events: [
      {
        startTime: '17:00',
        endTime: '20:00',
        title: 'SheBuilds by Bhawna Chauhan',
        type: 'dev',
        location: 'ABLT-4, IIT (BHU)',
      },
    ],
  },
  {
    date: '2025-02-22',
    day: 'Day 6',
    events: [
      {
        startTime: '10:00',
        endTime: '16:00',
        title: 'Solana Workshop',
        type: 'dev',
        location: 'ABLT-4, IIT (BHU)',
      },
      {
        startTime: '17:30',
        endTime: '17:30',
        title: 'Kashi CTF',
        type: 'cybersec',
        location: 'Online',
        startDate: '2025-02-22',
        endDate: '2025-02-23',
      },
    ],
  },
];

const typeLabels = {
  ml: 'Machine Learning',
  dev: 'Development',
  cybersec: 'Cybersecurity',
  cp: 'Competitive Programming',
} as const;

const typeColors = {
  ml: 'bg-emerald-500/20 border-emerald-500 text-emerald-400',
  dev: 'bg-amber-500/20 border-amber-500 text-amber-400',
  cybersec: 'bg-blue-500/20 border-blue-500 text-blue-400',
  cp: 'bg-rose-500/20 border-rose-500 text-rose-400',
} as const;

const getEventColor = (type: keyof typeof typeColors) => typeColors[type];

function getTimeString(event: Event): string {
  const formatDate = (date: string) => {
    return new Date(date).toLocaleDateString('en-US', {
      month: 'short',
      day: 'numeric',
    });
  };

  const startStr = `${event.startTime}${event.startDate ? ` (${formatDate(event.startDate)})` : ''}`;
  const endStr = `${event.endTime}${event.endDate ? ` (${formatDate(event.endDate)})` : ''}`;

  return `<span class="md:hidden">
    ${startStr}<br/>${endStr}
    </span>
    <span class="hidden md:inline">${startStr} - ${endStr}</span>`;
}
---

<section class="py-20" id="schedule">
  <div class="container mx-auto px-4">
    <div class="mb-16 text-center">
      <h2 class="mb-4 text-4xl font-bold text-amber-100">Event Timeline</h2>
      <div class="flex flex-wrap justify-center gap-4">
        {
          Object.entries(typeLabels).map(([type, label]) => (
            <div class="flex items-center gap-2">
              <div
                class={`h-3 w-3 rounded-full ${
                  type === 'ml'
                    ? 'bg-emerald-500'
                    : type === 'dev'
                      ? 'bg-amber-500'
                      : type === 'cybersec'
                        ? 'bg-blue-500'
                        : 'bg-rose-500'
                }`}
              />
              <span class="text-sm text-amber-100/70">{label}</span>
            </div>
          ))
        }
      </div>
    </div>

    <div class="mx-auto max-w-4xl space-y-6">
      {
        schedule.map((day) => (
          <div class="relative">
            <div class="sticky top-0 z-10 mb-2 bg-black/90 py-4 backdrop-blur-sm">
              <div class="flex items-center gap-4">
                <div class="rounded bg-amber-100/10 px-4 py-2">
                  <span class="font-mono text-amber-100">{day.day}</span>
                </div>
                <h3 class="text-xl text-amber-100/70">
                  {new Date(day.date).toLocaleDateString('en-US', {
                    month: 'long',
                    day: 'numeric',
                    year: 'numeric',
                  })}
                </h3>
              </div>
            </div>

            <div class="space-y-2">
              {day.events.map((event) => (
                <div
                  class={`relative rounded-lg border p-4 backdrop-blur-sm ${getEventColor(event.type)}`}
                >
                  <div class="flex flex-col gap-2 md:flex-row md:items-center md:justify-between">
                    <div class="flex items-center gap-3">
                      <div
                        class="font-mono text-sm opacity-80"
                        set:html={getTimeString(event)}
                      />
                      <h4 class="font-semibold">{event.title}</h4>
                    </div>
                    <div class="flex items-center gap-2 text-sm opacity-80">
                      <Icon name="lucide:map-pin" class="h-4 w-4" />
                      <span>{event.location}</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))
      }
    </div>
  </div>
</section>

<style>
  section {
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.8), transparent);
  }

  .container {
    position: relative;
  }

  .container::before {
    content: '';
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    width: 2px;
    height: 100%;
    background: rgba(251, 191, 36, 0.1);
    z-index: -1;
  }

  @media (max-width: 768px) {
    .container::before {
      left: 20px;
    }
  }
</style>
